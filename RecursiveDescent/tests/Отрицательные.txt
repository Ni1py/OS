1) Проверка на отсутствие точки с запятой

PROG id 
VAR id, id, id : int
BEGIN
READ(id,id)
Id:= id+num*-(-num+id*id*-num*( id+-num))
WRITE(id,id,id)
END

2) В символе := пробел между : и =
PROG  end id 
VAR id, id, id : int;
BEGIN
READ(id,id);
Id : = id+num*-(-num+id*id*-num*( id+-num));
WRITE(id,id,id);
END

3) Проверка пустого VAR

PROG id 
VAR : int;
BEGIN
READ(id,id);
Id:= id+num*-(-num+id*id*-num*( id+-num));
WRITE(id,id,id);
END

4) Проверка записи в одну строку без пробелов

PROGidVARid,id,id:int;BEGINREAD(id,id);Id:=id+num*-(-num+id*id*-num*(id+-num));WRITE(id,id,id);END

5) Проверка переменной в VAR, в названии которой присутствует число

PROG id 
VAR id1 : int;
BEGIN
READ(id,id);
Id:= id+num*-(-num+id*id*-num*( id+-num));
WRITE(id,id,id);
END

6) Проверка значений в VAR, перечисленных без запятой

PROG id 
VAR id id id : int;
BEGIN
READ(id,id);
Id:= id+num*-(-num+id*id*-num*( id+-num));
WRITE(id,id,id);
END

7) Проверка объявления переменных без указания типа

PROG id 
VAR id, id, id : ;
BEGIN
READ(id,id);
Id:= id+num*-(-num+id*id*-num*( id+-num));
WRITE(id,id,id);
END

8) Проверка шаблона без части VAR

PROG id 
BEGIN
READ(id,id);
Id:= id+num*-(-num+id*id*-num*( id+-num));
WRITE(id,id,id);
END

9) Проверка шаблона без части <LISTST>

PROG id 
VAR id, id, id : int;
BEGIN
END


10) Попытка передать в READ 0 аргументов

PROG id 
VAR id, id, id : int;
BEGIN
READ();
Id:= id+num*-(-num+id*id*-num*( id+-num));
WRITE(id,id,id);
END

11) Проверка пустого присваивания в <ASSIGN>

PROG id 
VAR id, id, id : int;
BEGIN
READ(id,id);
Id := ;
WRITE(id,id,id);
END

12) Проверка операции умножения используя несколько "*" подряд

PROG id 
VAR id, id, id : int;
BEGIN
READ(id,id);
Id := id***id;
WRITE(id,id,id);
END

13) Проверка выражения, где количество открытых и закрытых скобок не совпадает

PROG id 
VAR id, id, id : int;
BEGIN
READ(id,id);
Id := (((id));
WRITE(id,id,id);
END

14) Проверка на лишние ";"

PROG id 
VAR id, id, id : int;;
BEGIN
READ(id,id);;
Id:= id+num*-(-num+id*id*-num*( id+-num));;
WRITE(id,id,id);;
END

15) Проверка на пустой ввод

16) Дублирование End
PROG id 
VAR id, id, id : int;
BEGIN
READ(id,id);
Id:= id+num*-(-num+id*id*-num*( id+-num));
WRITE(id,id,id);
END 
END 

17) Проверка отсутствия символов после end
PROG id 
VAR id, id, id : int;
BEGIN
READ(id,id);
Id:= id+num*-(-num+id*id*-num*( id+-num));
WRITE(id,id,id);
END 
jh

18) Попытка передать в WRITE 0 аргументов

PROG id 
VAR id, id, id : int;
BEGIN
READ(id,id);
Id:= id+num*-(-num+id*id*-num*( id+-num));
WRITE();
END

19) Проверка отсутствия end

prog id 
var id, id, id : int;
begin
read(id,id);
id:= id+num*-(-num+id*id*-num*( id+-num));
write(id,id,id);

20) Между prog и id лишнее слово

PROG  end id 
VAR id, id, id : int;
BEGIN
READ(id,id);
Id:= id+num*-(-num+id*id*-num*( id+-num));
WRITE(id,id,id);
END